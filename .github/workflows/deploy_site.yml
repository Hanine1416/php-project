name: Deploy Site
on:
  workflow_dispatch:
    inputs:
      release_env:
        description: 'Environment'
        required: true
        default: 'dev'
        type: choice
        options:
          - dev
          - qa
          - prod
      release_branch:
        description: 'Site Code Branch'
        required: true
  push:
    branches:
      - development
      - qa
    paths-ignore:
      - 'README.md'
      - '.github/**'

jobs:
  GetEnv:
    runs-on:
      - self-hosted
      - ephemeral
    outputs:
      deploy_env:    ${{ env.DEPLOY_ENV }}
      deploy_branch: ${{ env.DEPLOY_BRANCH }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get Deploy Env
        id: check_step
        run: |
          if ${{ github.event_name == 'workflow_dispatch' }}; then
            deploy_env=${{ github.event.inputs.release_env }}
            branch=${{ github.event.inputs.release_branch }}
          elif ${{ (github.event_name == 'pull_request' || github.event_name == 'push') }}; then
            raw=$(git branch -r --contains ${{ github.ref }})
            branch=${raw##*/}
            echo "Branch: $branch"
            if [ $branch == 'development' ]; then
              deploy_env='dev'
            elif [ $branch == 'qa' ]; then
              deploy_env='qa'
            fi
          fi
          echo "DEPLOY_ENV=$deploy_env" >> $GITHUB_ENV
          echo "DEPLOY_BRANCH=$branch" >> $GITHUB_ENV
          echo "Deploy Env: $deploy_env"
          echo "Deploy Branch: $branch"
          echo "Event: ${{ github.event_name }}"

  Deploy-NonProd:
    runs-on: 
      - self-hosted
      - ephemeral
      - "${{ needs.GetEnv.outputs.deploy_env }}"
    if: ${{ github.event.inputs.release_env != 'prod' }}
    needs: GetEnv
    steps:
    - name: Checkout
      uses: actions/checkout@v4
    - name: Install AWS CLI v2
      run: |
        curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o /tmp/awscliv2.zip
        unzip -q /tmp/awscliv2.zip -d /tmp
        rm /tmp/awscliv2.zip
        sudo /tmp/aws/install --update
        rm -rf /tmp/aws/
    - name: Deploy branch ${{ needs.GetEnv.outputs.deploy_branch }} to ${{ needs.GetEnv.outputs.deploy_env }}
      run: |
        bash ${GITHUB_WORKSPACE}/.github/scripts/RunAnsible.sh \
        ${{ needs.GetEnv.outputs.deploy_env }} \
        "deploy-site" \
        '{"SourceType":["GitHub"],"SourceInfo":["{\"owner\":\"elsevier-health\",\"repository\":\"gme-ic-ansible\",\"getOptions\":\"branch:main\",\"tokenInfo\":\"{{ssm-secure:/tio/github/access_token}}\"}"],"InstallDependencies":["False"],"PlaybookFile":["deploy_site.yml"],"ExtraVariables":["env='"'"'${{ needs.GetEnv.outputs.deploy_env }}'"'"' branch='"'"'${{ needs.GetEnv.outputs.deploy_branch }}'"'"'"],"Check":["False"],"Verbose":["-v"],"TimeoutSeconds":["3600"]}'

  Deploy-Prod:
    runs-on: [self-hosted, prod, ephemeral]
    if: ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.release_env == 'prod' }}
    needs: GetEnv
    steps:
    - name: Checkout
      uses: actions/checkout@v4
    - name: Install AWS CLI v2
      run: |
        curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o /tmp/awscliv2.zip
        unzip -q /tmp/awscliv2.zip -d /tmp
        rm /tmp/awscliv2.zip
        sudo /tmp/aws/install --update
        rm -rf /tmp/aws/
    - name: Deploy branch ${{ needs.GetEnv.outputs.deploy_branch }} to Prod
      run: |
        bash ${GITHUB_WORKSPACE}/.github/scripts/RunAnsible.sh \
        ${{ needs.GetEnv.outputs.deploy_env }} \
        "deploy-site" \
        '{"SourceType":["GitHub"],"SourceInfo":["{\"owner\":\"elsevier-health\",\"repository\":\"gme-ic-ansible\",\"getOptions\":\"branch:main\",\"tokenInfo\":\"{{ssm-secure:/tio/github/access_token}}\"}"],"InstallDependencies":["False"],"PlaybookFile":["deploy_site.yml"],"ExtraVariables":["env='"'"'${{ needs.GetEnv.outputs.deploy_env }}'"'"' branch='"'"'${{ needs.GetEnv.outputs.deploy_branch }}'"'"'"],"Check":["False"],"Verbose":["-v"],"TimeoutSeconds":["3600"]}'
